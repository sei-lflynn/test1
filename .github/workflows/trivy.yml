name: Trivy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '27 16 * * 0'

permissions:
  contents: read
  security-events: write

jobs:
  trivy-scan:
    name: Trivy Full Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python (optional)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies if present
        run: |
          if [ -f requirements.txt ]; then
            python -m venv .venv
            source .venv/bin/activate
            pip install -r requirements.txt
          fi

      - name: Run Trivy (vuln, misconfig, secret, license)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          scanners: 'vuln,misconfig,secret,license'
          vuln-type: 'os,library'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'
          limit-severities-for-sarif: true
          ignore-unfixed: false
          timeout: '15m'
          hide-progress: true

      - name: Verify SARIF file
        run: |
          test -f trivy-results.sarif && echo "SARIF generated" || (echo "SARIF missing" && exit 1)

      - name: Upload Trivy SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: success()
        with:
          sarif_file: trivy-results.sarif

  trivy-config-scan:
    name: Trivy Config (IaC & Dockerfiles)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Optional: reuse Python if your IaC tooling/hooks need it
      - name: Set up Python (optional)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Run Trivy config scan (misconfig only)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'                 # analyze config files only
          scan-ref: '.'                       # repository root
          scanners: 'misconfig'               # IaC/Dockerfile/K8s/Helm checks
          format: 'sarif'                     # native SARIF for GitHub
          output: 'trivy-config.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'    # adjust as desired
          limit-severities-for-sarif: true
          exit-code: '1'                      # fail job if selected severities are found
          timeout: '10m'
          hide-progress: true

      - name: Verify SARIF file (config)
        run: |
          test -f trivy-config.sarif && echo "Config SARIF generated" || (echo "Config SARIF missing" && exit 1)

      - name: Upload Trivy Config SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()                          # upload even if the job failed due to exit-code
        with:
          sarif_file: trivy-config.sarif
