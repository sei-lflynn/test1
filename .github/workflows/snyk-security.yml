# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security

on:
  push:
    # branches: ["main" ]
  pull_request:
    # branches: ["main"]

permissions:
  contents: read
  security-events: write

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      # ---------- SAST (Snyk Code) ----------
      - name: Run Snyk Code (SAST)
        uses: snyk/actions/python@master
        continue-on-error: true  # ensure SARIF upload runs even if issues are found
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --sarif-file-output=snyk-code.sarif

      - name: Upload Snyk Code SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
          category: snyk-code

      #---------- SCA (Open Source / dependencies) ----------
      # ---------- SCA (Maven via pom.xml) ----------
      - name: Run Snyk Open Source (Maven)
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          # If pom.xml isn't at repo root, change the path here:
          args: --file=pom.xml --sarif-file-output=snyk-oss-maven.sarif

      - name: Upload Snyk OSS (Maven) SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-oss-maven.sarif
          category: snyk-oss-maven

      # ---------- SCA (C/C++ without manifests) ----------
      - name: Run Snyk Open Source (C/C++ unmanaged)
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --unmanaged --sarif-file-output=snyk-oss-unmanaged.sarif

      - name: Upload Snyk OSS (unmanaged) SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-oss-unmanaged.sarif
          category: snyk-oss-unmanaged

      # ---------- Container ----------
      - name: Build container image
        run: docker build -t local/app:${{ github.sha }} .

      - name: Run Snyk Container
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: container test
          args: local/app:${{ github.sha }} --file=Dockerfile --sarif-file-output=snyk-container.sarif

      - name: Upload Snyk Container SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-container.sarif
          category: snyk-container

      # ---------- IaC ----------
      - name: Run Snyk IaC
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: iac test
          args: . --sarif-file-output=snyk-iac.sarif

      - name: Upload Snyk IaC SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-iac.sarif
          category: snyk-iac
