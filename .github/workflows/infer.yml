name: Infer Static Analysis - Main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write

jobs:
  infer-analysis:
    runs-on: ubuntu-latest
    env:
      INFER_VERSION: v1.2.0
      INFER_BASENAME: infer-linux-x86_64-v1.2.0
      INFER_INSTALL_DIR: ${{ github.workspace }}/.tools/infer/infer-linux-x86_64-v1.2.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java (for Infer)
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Infer ${{ env.INFER_VERSION }}
        id: infer-cache
        uses: actions/cache@v4
        with:
          path: ${{ env.INFER_INSTALL_DIR }}
          key: infer-${{ runner.os }}-${{ env.INFER_BASENAME }}-v1

      - name: Install Infer (if cache miss)
        if: steps.infer-cache.outputs.cache-hit != 'true'
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y wget xz-utils build-essential m4
          mkdir -p "$(dirname "${INFER_INSTALL_DIR}")"
          wget "https://github.com/facebook/infer/releases/download/${INFER_VERSION}/${INFER_BASENAME}.tar.xz"
          tar -xf "${INFER_BASENAME}.tar.xz"
          mv "${INFER_BASENAME}" "${INFER_INSTALL_DIR}"

      - name: Add Infer to PATH and verify
        run: |
          set -euxo pipefail
          echo "${INFER_INSTALL_DIR}/bin" >> "$GITHUB_PATH"
          export PATH="${INFER_INSTALL_DIR}/bin:$PATH"
          infer --version

      - name: Install native toolchains (C/C++/ObjC)
        run: |
          set -euxo pipefail
          sudo apt-get update
          # Core toolchain
          sudo apt-get install -y build-essential clang pkg-config
          # GNUstep base & makefiles (headers + libs for -lgnustep-base)
          sudo apt-get install -y libgnustep-base-dev gnustep-make
          # Objective-C runtime dev package (provides libobjc.so)
          # Pick the latest libobjc-*-dev available on the runner (e.g., libobjc-14-dev on Ubuntu 24.04)
          LIBOBJC_DEV="$(apt-cache search -n '^libobjc-[0-9]+-dev$' | awk '{print $1}' | sort -V | tail -n1)"
          if [ -n "${LIBOBJC_DEV}" ]; then
            sudo apt-get install -y "${LIBOBJC_DEV}"
          else
            echo "No libobjc-*-dev package found via apt-cache" >&2
            # Fallback: runtime (may be insufficient without -dev symlinks, but better than nothing)
            sudo apt-get install -y libobjc4
          fi
          # Optional: show that the linker can now see libobjc
          ldconfig -p | grep -E 'libobjc\.so' || true

      # -------- CAPTURE via your Makefile (covers C/C++/ObjC/Java) --------
      - name: Infer capture with Make
        run: |
          set -euxo pipefail
          export PATH="${INFER_INSTALL_DIR}/bin:$PATH"

          # Ensure Infer wraps the compilers your Makefile uses
          export CC=clang
          export CXX=clang++
          export OBJC=clang
          export OBJCXX=clang++
          export CCACHE_DISABLE=1

          # Help Make find the configured javac (if it needs it)
          export JAVAC="$(command -v javac)"

          # If your Makefile needs GNUstep flags, you can add:
          # export OBJCFLAGS="$(gnustep-config --objc-flags) -fblocks"
          # export LDFLAGS="$(gnustep-config --base-libs)"

          # Two-phase is clearer and more robust than 'infer run -- make'
          infer capture --results-dir infer-out -- \
            make --keep-going

      # -------- ANALYZE & EMIT SARIF --------
      - name: Infer analyze and emit SARIF
        run: |
          set -euxo pipefail
          export PATH="${INFER_INSTALL_DIR}/bin:$PATH"
          infer analyze --results-dir infer-out --sarif
          test -f infer-out/report.sarif || (echo "SARIF not found in infer-out/"; ls -R infer-out || true; exit 1)
          cp infer-out/report.sarif infer-out/infer-code.sarif

      - name: Upload SARIF to GitHub code scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: infer-out/infer-code.sarif