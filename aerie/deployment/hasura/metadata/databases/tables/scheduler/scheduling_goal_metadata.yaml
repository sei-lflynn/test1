table:
  name: scheduling_goal_metadata
  schema: scheduler
configuration:
  custom_name: "scheduling_goal_metadata"
array_relationships:
  - name: analyses
    using:
      manual_configuration:
        column_mapping:
          id: goal_id
        remote_table:
          name: scheduling_goal_analysis
          schema: scheduler
  - name: tags
    using:
      foreign_key_constraint_on:
        column: goal_id
        table:
          name: scheduling_goal_tags
          schema: tags
  - name: versions
    using:
      foreign_key_constraint_on:
        column: goal_id
        table:
          name: scheduling_goal_definition
          schema: scheduler
  - name: models_using
    using:
      foreign_key_constraint_on:
        column: goal_id
        table:
          name: scheduling_model_specification_goals
          schema: scheduler
  - name: plans_using
    using:
      foreign_key_constraint_on:
        column: goal_id
        table:
          name: scheduling_specification_goals
          schema: scheduler
select_permissions:
  - role: aerie_admin
    permission:
      columns: '*'
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns: '*'
# This should have filtering based on privacy, but cross-database permissions restrictions prevent that
      filter: {}
      allow_aggregations: true
  - role: viewer
    permission:
      columns: '*'
      filter: {}
      allow_aggregations: true
insert_permissions:
  - role: aerie_admin
    permission:
      columns: [name, description, public]
      check: {}
      set:
        owner: "x-hasura-user-id"
        updated_by: "x-hasura-user-id"
  - role: user
    permission:
      columns: [name, description, public]
      check: {}
      set:
        owner: "x-hasura-user-id"
        updated_by: "x-hasura-user-id"
update_permissions:
  - role: aerie_admin
    permission:
      columns: [name, description, public, owner]
      filter: {}
      set:
        updated_by: "x-hasura-user-id"
  - role: user
    permission:
      columns: [name, description, public, owner]
      filter: { "owner": { "_eq": "X-Hasura-User-Id" } }
      set:
        updated_by: "x-hasura-user-id"
delete_permissions:
  - role: aerie_admin
    permission:
      filter: {}
  - role: user
    permission:
      filter: { "owner": { "_eq": "X-Hasura-User-Id" } }
