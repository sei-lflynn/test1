/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Schema for FPP JSON dictionaries
 */
export interface FPPJSONDictionarySchema {
  metadata?: {
    deploymentName?: string;
    frameworkVersion?: string;
    projectVersion?: string;
    libraryVersions?: string[];
    dictionarySpecVersion?: string;
    [k: string]: unknown;
  };
  typeDefinitions?: (
    | {
        kind: "array";
        qualifiedName: string;
        size: number;
        elementType: TypeDescriptor;
        default: unknown[];
        annotation?: string;
        [k: string]: unknown;
      }
    | {
        kind: "enum";
        qualifiedName: string;
        representationType: TypeDescriptor;
        enumeratedConstants: EnumeratedConstantsDescriptor[];
        default: string;
        annotation?: string;
        [k: string]: unknown;
      }
    | {
        kind: "struct";
        qualifiedName: string;
        annotation?: string;
        members: {
          [k: string]: StructMemberDescriptor;
        };
        default: {
          [k: string]:
            | string
            | number
            | boolean
            | unknown[]
            | {
                [k: string]: unknown;
              };
        };
        [k: string]: unknown;
      }
  )[];
  commands?: {
    name: string;
    commandKind: string;
    opcode: number;
    annotation?: string;
    formalParams: FormalParameter[];
    priority?: number;
    queueFullBehavior?: "assert" | "block" | "drop";
    [k: string]: unknown;
  }[];
  parameters?: {
    name: string;
    annotation?: string;
    type: TypeDescriptor;
    default?:
      | number
      | string
      | boolean
      | {
          [k: string]: unknown;
        }
      | unknown[];
    id: number;
    [k: string]: unknown;
  }[];
  events?: {
    name: string;
    annotation?: string;
    severity: "ACTIVITY_HI" | "ACTIVITY_LO" | "COMMAND" | "DIAGNOSTIC" | "FATAL" | "WARNING_HI" | "WARNING_LO";
    formalParams: FormalParameter[];
    id: number;
    format?: string;
    throttle?: number;
    [k: string]: unknown;
  }[];
  telemetryChannels?: {
    name: string;
    annotation?: string;
    type: TypeDescriptor;
    id: number;
    telemetryUpdate: "always" | "on change";
    format?: string;
    limit?: {
      high?: {
        yellow?: number;
        orange?: number;
        red?: number;
        [k: string]: unknown;
      };
      low?: {
        yellow?: number;
        orange?: number;
        red?: number;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
    [k: string]: unknown;
  }[];
  records?: {
    name: string;
    annotation?: string;
    type: TypeDescriptor;
    array?: boolean;
    id: number;
    [k: string]: unknown;
  }[];
  containers?: {
    name: string;
    annotation?: string;
    id: number;
    defaultPriority?: number;
    [k: string]: unknown;
  }[];
  [k: string]: unknown;
}
export interface TypeDescriptor {
  name: string;
  kind: "integer" | "float" | "bool" | "string" | "qualifiedIdentifier";
  size?: number;
  signed?: boolean;
  [k: string]: unknown;
}
export interface EnumeratedConstantsDescriptor {
  name: string;
  value: number;
  annotation?: string;
  [k: string]: unknown;
}
export interface StructMemberDescriptor {
  type: TypeDescriptor;
  index: number;
  size?: number;
  format?: string;
  annotation?: string;
  [k: string]: unknown;
}
export interface FormalParameter {
  name: string;
  annotation?: string;
  type: TypeDescriptor;
  ref: boolean;
  [k: string]: unknown;
}
